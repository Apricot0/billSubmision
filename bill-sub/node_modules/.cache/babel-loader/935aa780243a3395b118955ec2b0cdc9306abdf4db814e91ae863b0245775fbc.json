{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ZengQ\\\\Documents\\\\billSubmision\\\\bill-sub\\\\src\\\\pages\\\\Submission.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useState } from \"react\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.withCredentials = true;\nexport default function Submission() {\n  _s();\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleName = event => {\n    const value = event.target.value.trim();\n    if (value.length === 0 || /^\\s*$/.test(value)) {\n      event.target.setCustomValidity('Title cannot be empty or only contain whitespace');\n    } else {\n      event.target.setCustomValidity('');\n    }\n  };\n  const handleAddress = event => {\n    const value = event.target.value.trim();\n    if (value.length === 0 || /^\\s*$/.test(value)) {\n      event.target.setCustomValidity('Title cannot be empty or only contain whitespace');\n    } else {\n      event.target.setCustomValidity('');\n    }\n  };\n  const handleHospital = event => {\n    const value = event.target.value.trim();\n    if (value.length === 0 || /^\\s*$/.test(value)) {\n      event.target.setCustomValidity('Title cannot be empty or only contain whitespace');\n    } else {\n      event.target.setCustomValidity('');\n    }\n  };\n  const handleA = event => {\n    event.target.setCustomValidity('');\n  };\n  function submitQuestion(event) {\n    event.preventDefault();\n    const form = event.target;\n    const title = form.elements['question-title'].value.trim();\n    const summary = form.elements['question-summary'].value.trim();\n    const text = form.elements.input_text.value.trim();\n    const tagsInput = form.elements.tags.value.trim();\n    const tags = tagsInput.split(/\\s+/);\n    console.log(tags);\n    //const username = form.elements.username.value.trim()\n    axios.post('http://localhost:8000/questions/postquestion', {\n      title,\n      summary,\n      text,\n      tags\n      //askedBy: username\n    }).then(() => {\n      // form.reset();\n      console.log('hi');\n      changeToPage('questionPage');\n    }).catch(error => {\n      if (error.response && error.response.data && error.response.data.message) {\n        setErrorMessage(`Post failed: ${error.response.data.message}`);\n        console.error(error.response.data.message);\n      } else {\n        setErrorMessage(\"Error due to server: \", error.status);\n      }\n    });\n\n    // add question and add tag\n    // const tagIds = tags.map((tag) => Model.addTag(tag));\n    // Model.addQuestion(title, text, tagIds, username);\n    // changeToPage(\"questionPage\");\n  }\n  // onSubmit={handleSubmit}\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitQuestion,\n    id: \"form\",\n    action: \"#\",\n    method: \"post\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"question-title\",\n          children: \"Question Title*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"Limit text to 50 characters or less\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"question-title\",\n          id: \"question-title\",\n          maxLength: 50,\n          required: true,\n          onInput: handleTitleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"question-summary\",\n          children: \"Question Summary*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"Limit text to 140 characters or less\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"question-summary\",\n          id: \"question-summary\",\n          maxLength: 140,\n          required: true,\n          onInput: handleSummaryInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"input_text\",\n          children: \"Question Text*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"Add details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"input_text\",\n          id: \"input_text\",\n          minLength: 1,\n          required: true,\n          onInput: handleTextInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"tags\",\n          children: \"Tags*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"Add keywords separated by whitespace\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"tags\",\n          id: \"tags\",\n          required: true,\n          onInput: handleTagInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"botButton\",\n          children: \"Post Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mustfillHint\",\n          children: \"*indicates mandatory fields\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"welcome_error\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(Submission, \"Qa+fXmSUSiSzKMj9v3Zv5vD0nos=\");\n_c = Submission;\nvar _c;\n$RefreshReg$(_c, \"Submission\");","map":{"version":3,"names":["axios","useState","React","jsxDEV","_jsxDEV","defaults","withCredentials","Submission","_s","errorMessage","setErrorMessage","handleName","event","value","target","trim","length","test","setCustomValidity","handleAddress","handleHospital","handleA","submitQuestion","preventDefault","form","title","elements","summary","text","input_text","tagsInput","tags","split","console","log","post","then","changeToPage","catch","error","response","data","message","status","onSubmit","id","action","method","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","name","maxLength","required","onInput","handleTitleInput","handleSummaryInput","minLength","handleTextInput","handleTagInput","_c","$RefreshReg$"],"sources":["C:/Users/ZengQ/Documents/billSubmision/bill-sub/src/pages/Submission.js"],"sourcesContent":["import axios from 'axios'\r\nimport { useState } from \"react\";\r\nimport React from 'react'\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\nexport default function Submission() {\r\n\r\n\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n\r\n  const handleName = (event) => {\r\n    const value = event.target.value.trim()\r\n    if (value.length === 0 || /^\\s*$/.test(value)) {\r\n      event.target.setCustomValidity(\r\n        'Title cannot be empty or only contain whitespace'\r\n      )\r\n    } else {\r\n      event.target.setCustomValidity('')\r\n    }\r\n  }\r\n\r\n  const handleAddress = (event) => {\r\n    const value = event.target.value.trim()\r\n    if (value.length === 0 || /^\\s*$/.test(value)) {\r\n      event.target.setCustomValidity(\r\n        'Title cannot be empty or only contain whitespace'\r\n      )\r\n    } else {\r\n      event.target.setCustomValidity('')\r\n    }\r\n  }\r\n\r\n  const handleHospital = (event) => {\r\n    const value = event.target.value.trim()\r\n    if (value.length === 0 || /^\\s*$/.test(value)) {\r\n      event.target.setCustomValidity(\r\n        'Title cannot be empty or only contain whitespace'\r\n      )\r\n    } else {\r\n      event.target.setCustomValidity('')\r\n    }\r\n  }\r\n\r\n  const handleA = (event) => {\r\n    event.target.setCustomValidity('')\r\n  }\r\n\r\n  function submitQuestion(event) {\r\n    event.preventDefault()\r\n    const form = event.target\r\n    const title = form.elements['question-title'].value.trim()\r\n    const summary = form.elements['question-summary'].value.trim()\r\n    const text = form.elements.input_text.value.trim()\r\n    const tagsInput = form.elements.tags.value.trim()\r\n    const tags = tagsInput.split(/\\s+/)\r\n    console.log(tags)\r\n    //const username = form.elements.username.value.trim()\r\n    axios.post('http://localhost:8000/questions/postquestion', {\r\n      title,\r\n      summary,\r\n      text,\r\n      tags,\r\n      //askedBy: username\r\n    }).then(() => {\r\n      // form.reset();\r\n      console.log('hi')\r\n      changeToPage('questionPage')\r\n    })\r\n      .catch((error) => {\r\n        if (error.response && error.response.data && error.response.data.message) {\r\n          setErrorMessage(`Post failed: ${error.response.data.message}`);\r\n          console.error(error.response.data.message)\r\n        }else{\r\n          setErrorMessage(\"Error due to server: \", error.status)\r\n        }\r\n\r\n      })\r\n\r\n    // add question and add tag\r\n    // const tagIds = tags.map((tag) => Model.addTag(tag));\r\n    // Model.addQuestion(title, text, tagIds, username);\r\n    // changeToPage(\"questionPage\");\r\n  }\r\n  // onSubmit={handleSubmit}\r\n  return (\r\n    <form onSubmit={submitQuestion} id=\"form\" action=\"#\" method=\"post\">\r\n      <div className=\"form-container\">\r\n        <div className=\"input\">\r\n          <label htmlFor=\"question-title\">Question Title*</label>\r\n          <em>Limit text to 50 characters or less</em>\r\n          <input\r\n            type=\"text\"\r\n            name=\"question-title\"\r\n            id=\"question-title\"\r\n            maxLength={50}\r\n            required\r\n            onInput={handleTitleInput}\r\n          />\r\n        </div >\r\n        <div className=\"input\">\r\n        <label htmlFor=\"question-summary\">Question Summary*</label>\r\n          <em>Limit text to 140 characters or less</em>\r\n          <input\r\n            type=\"text\"\r\n            name=\"question-summary\"\r\n            id=\"question-summary\"\r\n            maxLength={140}\r\n            required\r\n            onInput={handleSummaryInput}\r\n          />\r\n        </div>\r\n        <div className=\"input\">\r\n          <label htmlFor=\"input_text\">Question Text*</label>\r\n          <em>Add details</em>\r\n          <textarea\r\n            name=\"input_text\"\r\n            id=\"input_text\"\r\n            minLength={1}\r\n            required\r\n            onInput={handleTextInput}\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"input\">\r\n          <label htmlFor=\"tags\">Tags*</label>\r\n          <em>Add keywords separated by whitespace</em>\r\n          <input\r\n            type=\"text\"\r\n            name=\"tags\"\r\n            id=\"tags\"\r\n            required\r\n            onInput={handleTagInput}\r\n          />\r\n        </div>\r\n        {/*\r\n        <div className=\"input\">\r\n          <label htmlFor=\"username\">Username*</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            id=\"username\"\r\n            minLength={1}\r\n            required\r\n          />\r\n        </div>\r\n        */}\r\n        <div>\r\n          <button type=\"submit\" className=\"botButton\">\r\n            Post Question\r\n          </button>\r\n          <p className=\"mustfillHint\">*indicates mandatory fields</p>\r\n        </div>\r\n        <p className='welcome_error'>{errorMessage}</p>\r\n      </div>\r\n    </form >\r\n  )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}